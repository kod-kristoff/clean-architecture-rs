on:
  push:
  pull_request:
  merge_group:

name: CI

jobs:

  coverage:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: |
          cd auctioning_platform
          cargo llvm-cov --all-features --workspace --codecov --output-path codecov.json
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-ubuntu
          path: codecov.json

  upload-coverage:
    name: Upload test coverage to CodeCov
    needs: [coverage]
    runs-on: ubuntu-latest
    permissions:
      statuses: write
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4

      - name: download coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*

      - name: display files
        run: |
          ls -aR

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          # directory: ./coverage
          # env_vars: OS,PYTHON
          fail_ci_if_error: false
          files: ./coverage-ubuntu/codecov.json
          # flags: unittests
          # name: codecov-umbrella
          verbose: true
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - run: |
          cd auctioning_platform
          cargo fmt --check --all

  lint:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          components: clippy
      - run: |
          cd auctioning_platform
          cargo clippy -- -D warnings
      
  # https://github.com/marketplace/actions/alls-green#why used for branch protection checks
  check:
    if: always()
    needs: [lint, coverage, fmt]
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-failures: lint
